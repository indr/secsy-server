!function e(n,r,t){function o(i,f){if(!r[i]){if(!n[i]){var c="function"==typeof require&&require;if(!f&&c)return c(i,!0);if(a)return a(i,!0);var u=new Error("Cannot find module '"+i+"'");throw u.code="MODULE_NOT_FOUND",u}var s=r[i]={exports:{}};n[i][0].call(s.exports,function(e){var r=n[i][1][e];return o(r?r:e)},s,s.exports,e,n,r,t)}return r[i].exports}for(var a="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}({1:[function(e,n,r){function t(e){for(var n in e)f.config[n]=e[n]}function o(e){e instanceof Uint8Array||(e=new Uint8Array(e)),f.crypto.random.randomBuffer.set(e)}function a(e,n){return"function"!=typeof f[e]?void i({event:"method-return",err:"Unknown Worker Event"}):(n=f.packet.clone.parseClonedPackets(n,e),void f[e](n).then(function(e){i({event:"method-return",data:f.packet.clone.clonePackets(e)})}).catch(function(e){i({event:"method-return",err:e.message})}))}function i(e){f.crypto.random.randomBuffer.size<c&&self.postMessage({event:"request-seed"}),self.postMessage(e,f.util.getTransferables.call(f.util,e.data))}self.window={},importScripts("openpgp.min-8ac5a8a18e5578132f649e1b6020e928.js");var f=window.openpgp,c=4e4,u=6e4;f.crypto.random.randomBuffer.init(u),self.onmessage=function(e){var n=e.data||{};switch(n.event){case"configure":t(n.config);break;case"seed-random":o(n.buf);break;default:a(n.event,n.options||{})}}},{}]},{},[1]);